import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, classification_report

#dataset
df = pd.read_csv("C:\\Kaggle\\Input\\Iris.csv") 
print("Dataset successfully loaded!")

print("Dataset Summary:")
print(df.describe())
print("Dataset Head:")
print(df.head())

#dropping unnecesary column
df.drop("Id", axis=1, inplace=True)
print("Updated Dataset Head (without 'Id'):")
print(df.head())


#Heatmap
numerical_columns = df.select_dtypes(include=['number'])
correlation_matrix = numerical_columns.corr()
plt.figure(figsize=(10, 5))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm')
plt.title("Correlation Heatmap - IRIS Dataset")
plt.show()


#Splitting
X = df[['SepalLengthCm', 'SepalWidthCm', 'PetalLengthCm', 'PetalWidthCm']]
y = df['Species']

#Spliting Test and training data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
print(f"Training samples: {len(X_train)}, Testing samples: {len(X_test)}")

#Decision Tree
clf = DecisionTreeClassifier(random_state=42)
clf.fit(X_train, y_train)
dt_predictions = clf.predict(X_test)

dt_accuracy = accuracy_score(y_test, dt_predictions)
print("Decision Tree Accuracy:", dt_accuracy)
print("Decision Tree Classification Report:")
print(classification_report(y_test, dt_predictions))


#KNN
knn = KNeighborsClassifier(n_neighbors=5)  # Modified to use 5 neighbors
knn.fit(X_train, y_train)
knn_predictions = knn.predict(X_test)

knn_accuracy = accuracy_score(y_test, knn_predictions)
print("KNN Accuracy:", knn_accuracy)
print("KNN Classification Report:")
print(classification_report(y_test, knn_predictions))


#Printing best model
if dt_accuracy > knn_accuracy:
    print("Decision Tree Classifier performed better!")
else:
    print("K-Nearest Neighbors Classifier performed better!")
